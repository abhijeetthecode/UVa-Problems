/*
UVa 156: Ananagrams
Author: Abhijeet Bhattacharya
*/

#include <bits/stdc++.h>
using namespace std;

int main() {
	string word,temp;
	map<string,string> mapping;
	set <string> forgotten;
	vector<string> ans;
	while(cin>>word,word!="#"){
	    temp=word;
	    for(int i=0;i<temp.size();i++) temp[i]=tolower(temp[i]);
	    sort(temp.begin(),temp.end());
	   
	    if(mapping.find(temp)!=mapping.end()){
	        mapping.erase(mapping.find(temp));
	        forgotten.insert(temp);
	    }
	    else if(forgotten.find(temp)!=forgotten.end()){
	        continue;
	    }
	    else{
	        mapping.insert(pair<string,string>(temp,word));
	    }
	}
	//Since cannot sort map by second element, therefore pushed elements into vector and then sorted in lexicographic order
	for(auto it=mapping.begin();it!=mapping.end();it++){
	    ans.push_back(it->second);
	}
	sort(ans.begin(),ans.end());
	for(auto it=ans.begin();it!=ans.end();it++){
	    cout<<*it<<endl;
	}
	
	return 0;
}
