/*
UVa 696: How many knights?
*/

#include <bits/stdc++.h>
using namespace std;

int solve(int n, int m){
    if(n > m) swap(n,m);  //handles all the symmetric cases
    if(n == 1) return m;  //Returns column
    /*
    Making blocks of 4 knights and for additional knights
    we find remaining cols if, col=1 then only 2 more knights can be accomodated
    else if col=2,3 then 4 more knights can be accomodated.
    */
    if(n == 2) return m / 4 * 4 + (m % 4 == 1? 2 : (m % 4 >= 2? 4 : 0)); 
    
    return (n*m + 1) / 2;       //Standard Formula to calculate knights in m*n matrix where m,n>2
}

int main(){
    int N,M,ans;
    
    while(true){
        scanf("%d %d",&N,&M);
        if(N == 0) break;
        
        printf("%d knights may be placed on a %d row %d column board.\n",solve(N,M),N,M);
    }
    
    return 0;
}
